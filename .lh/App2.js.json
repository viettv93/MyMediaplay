{
    "sourceFile": "App2.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 26,
            "patches": [
                {
                    "date": 1644598909005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1644678711285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,70 +1,145 @@\n-const App2=()=>{\r\n+import React, { useRef, useState } from 'react'\r\n+import { View, Slider, Image, Animated, TouchableOpacity } from 'react-native'\r\n+import TrackPlayer from 'react-native-track-player'\r\n+import { images } from './src/utils'\r\n+const tracks = [\r\n+\r\n+    {\r\n+        id: '1',\r\n+        url: 'https://www.chosic.com/wp-content/uploads/2021/07/The-Epic-Hero-Epic-Cinematic-Keys-of-Moon-Music.mp3',\r\n+        title: 'Keys of moon',\r\n+        artist: 'The Epic Hero',\r\n+        artwork: 'https://picsum.photos/id/1003/200/300',\r\n+        album: '',\r\n+        duration: 149,\r\n+    },\r\n+    {\r\n+        id: '2',\r\n+        url: 'https://www.chosic.com/wp-content/uploads/2021/07/Raindrops-on-window-sill.mp3',\r\n+        title: 'Raindrops on window sill',\r\n+        artist: '',\r\n+        artwork: 'https://picsum.photos/id/10/200/300',\r\n+        album: 'Chosic',\r\n+        duration: 119,\r\n+    },\r\n+    {\r\n+        id: '3',\r\n+        url: 'https://www.chosic.com/wp-content/uploads/2021/07/purrple-cat-equinox.mp3',\r\n+        title: 'Equinox',\r\n+        artist: 'Purple Cat',\r\n+        artwork: 'https://picsum.photos/id/1016/200/300',\r\n+        album: '',\r\n+        duration: 140,\r\n+    },\r\n+    {\r\n+        id: '4',\r\n+        url: 'https://www.chosic.com/wp-content/uploads/2021/04/And-So-It-Begins-Inspired-By-Crush-Sometimes.mp3',\r\n+        title: 'And So It Begins',\r\n+        artist: '',\r\n+        artwork: 'https://picsum.photos/id/1019/200/300',\r\n+        album: 'Artificial Music',\r\n+        duration: 208,\r\n+    },\r\n+    {\r\n+        id: '5',\r\n+        url: 'https://www.chosic.com/wp-content/uploads/2021/05/inossi-got-you.mp3',\r\n+        title: 'Got You',\r\n+        artist: '',\r\n+        artwork: 'https://picsum.photos/id/103/200/300',\r\n+        album: 'INOSSI',\r\n+        duration: 178,\r\n+    },\r\n+    {\r\n+        id: '6',\r\n+        url: 'https://www.chosic.com/wp-content/uploads/2021/04/kvgarlic__largestreamoverloginforestmarch.mp3',\r\n+        title: 'Peaceful water stream',\r\n+        artist: '',\r\n+        artwork: 'https://picsum.photos/id/1038/200/300',\r\n+        album: 'Chosic',\r\n+        duration: 66,\r\n+    }]\r\n+var index = 0\r\n+const App2 = () => {\r\n+    const previousButton = () => {\r\n+\r\n+    }\r\n+    const playButton = () => {\r\n+\r\n+    }\r\n+    const stopButton = () => {\r\n+\r\n+    }\r\n+    const nextButton = () => {\r\n+\r\n+    }\r\n+\r\n     return (\r\n         <View style={{\r\n-          flex: 1,\r\n-          backgroundColor: \"yellow\",\r\n-          justifyContent: 'center',\r\n-          alignItems: 'center'\r\n+            flex: 1,\r\n+            backgroundColor: \"yellow\",\r\n+            justifyContent: 'center',\r\n+            alignItems: 'center'\r\n         }}>\r\n-    \r\n-          <Animated.Image\r\n-            source={images.background}\r\n-            resizeMode='cover'\r\n-            style={{\r\n-              height: 200,\r\n-              width: 200,\r\n-              borderRadius: 100,\r\n-              transform: [{ rotate: rotateStyle }]  //\r\n-            }}\r\n-          />\r\n-    \r\n-          <View style={{ width: '100%', marginTop: 20 }}>\r\n-            <Slider maximumValue={149}\r\n-              minimumValue={0}\r\n-              value={progress.position}\r\n-              thumbTintColor=\"red\" />\r\n-          </View>\r\n-          <View style={{\r\n-            flexDirection: 'row',\r\n-            justifyContent: \"space-evenly\",\r\n-            marginTop: 30,\r\n-            alignItems: 'center',\r\n-            width: '100%'\r\n-          }}>\r\n-            <TouchableOpacity onPress={previous}>\r\n-              <Image\r\n-                style={{ height: 40, width: 40 }}\r\n-                source={require('./src/image/previousIcon.png')}\r\n-                resizeMode=\"cover\" />\r\n-            </TouchableOpacity>\r\n-            <TouchableOpacity\r\n-              onPress={play}\r\n-            >\r\n-              <Image source={isPlaying ?\r\n-                require('./src/image/pauseIcon.png') :\r\n-                require('./src/image/playIcon.jpg')}\r\n-                resizeMode=\"cover\"\r\n-                style={{ height: 40, width: 40 }} />\r\n-            </TouchableOpacity>\r\n-            <TouchableOpacity\r\n-              onPress={stopButton}>\r\n-    \r\n-              <Image source={require('./src/image/stopIcon.png')}\r\n-                resizeMode=\"cover\"\r\n+\r\n+            <Animated.Image\r\n+                source={images.background}\r\n+                resizeMode='cover'\r\n                 style={{\r\n-                  width: 40,\r\n-                  height: 40\r\n-                }} />\r\n-    \r\n-            </TouchableOpacity>\r\n-            <TouchableOpacity\r\n-              onPress={next}>\r\n-              <Image\r\n-                style={{ width: 40, height: 40 }}\r\n-                source={require('./src/image/nextIcon.png')} />\r\n-            </TouchableOpacity>\r\n-          </View>\r\n+                    height: 200,\r\n+                    width: 200,\r\n+                    borderRadius: 100,\r\n+                    transform: [{ rotate: rotateStyle }]  //\r\n+                }}\r\n+            />\r\n+\r\n+            <View style={{ width: '100%', marginTop: 20 }}>\r\n+                <Slider maximumValue={149}\r\n+                    minimumValue={0}\r\n+                    value={progress.position}\r\n+                    thumbTintColor=\"red\" />\r\n+            </View>\r\n+            <View style={{\r\n+                flexDirection: 'row',\r\n+                justifyContent: \"space-evenly\",\r\n+                marginTop: 30,\r\n+                alignItems: 'center',\r\n+                width: '100%'\r\n+            }}>\r\n+                <TouchableOpacity onPress={previousButton}>\r\n+                    <Image\r\n+                        style={{ height: 40, width: 40 }}\r\n+                        source={images.previous}\r\n+                        resizeMode=\"cover\" />\r\n+                </TouchableOpacity>\r\n+                <TouchableOpacity\r\n+                    onPress={playButton}\r\n+                >\r\n+                    <Image source={isPlaying ?\r\n+                        images.pause :\r\n+                        images.play}\r\n+                        resizeMode=\"cover\"\r\n+                        style={{ height: 40, width: 40 }} />\r\n+                </TouchableOpacity>\r\n+                <TouchableOpacity\r\n+                    onPress={stopButton}>\r\n+\r\n+                    <Image source={images.stop}\r\n+                        resizeMode=\"cover\"\r\n+                        style={{\r\n+                            width: 40,\r\n+                            height: 40\r\n+                        }} />\r\n+\r\n+                </TouchableOpacity>\r\n+                <TouchableOpacity\r\n+                    onPress={nextButton}>\r\n+                    <Image\r\n+                        style={{ width: 40, height: 40 }}\r\n+                        source={images.next}\r\n+                        resizeMode=\"cover\" />\r\n+                </TouchableOpacity>\r\n+            </View>\r\n         </View>\r\n-      )\r\n-    }\r\n+    )\r\n+}\r\n export default App2\n\\ No newline at end of file\n"
                },
                {
                    "date": 1644681142200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,76 +1,57 @@\n import React, { useRef, useState } from 'react'\r\n import { View, Slider, Image, Animated, TouchableOpacity } from 'react-native'\r\n-import TrackPlayer from 'react-native-track-player'\r\n-import { images } from './src/utils'\r\n-const tracks = [\r\n+import TrackPlayer, { useProgress } from 'react-native-track-player'\r\n+import Easing from 'react-native/Libraries/Animated/Easing'\r\n+import { images, tracks } from './src/utils'\r\n \r\n-    {\r\n-        id: '1',\r\n-        url: 'https://www.chosic.com/wp-content/uploads/2021/07/The-Epic-Hero-Epic-Cinematic-Keys-of-Moon-Music.mp3',\r\n-        title: 'Keys of moon',\r\n-        artist: 'The Epic Hero',\r\n-        artwork: 'https://picsum.photos/id/1003/200/300',\r\n-        album: '',\r\n-        duration: 149,\r\n-    },\r\n-    {\r\n-        id: '2',\r\n-        url: 'https://www.chosic.com/wp-content/uploads/2021/07/Raindrops-on-window-sill.mp3',\r\n-        title: 'Raindrops on window sill',\r\n-        artist: '',\r\n-        artwork: 'https://picsum.photos/id/10/200/300',\r\n-        album: 'Chosic',\r\n-        duration: 119,\r\n-    },\r\n-    {\r\n-        id: '3',\r\n-        url: 'https://www.chosic.com/wp-content/uploads/2021/07/purrple-cat-equinox.mp3',\r\n-        title: 'Equinox',\r\n-        artist: 'Purple Cat',\r\n-        artwork: 'https://picsum.photos/id/1016/200/300',\r\n-        album: '',\r\n-        duration: 140,\r\n-    },\r\n-    {\r\n-        id: '4',\r\n-        url: 'https://www.chosic.com/wp-content/uploads/2021/04/And-So-It-Begins-Inspired-By-Crush-Sometimes.mp3',\r\n-        title: 'And So It Begins',\r\n-        artist: '',\r\n-        artwork: 'https://picsum.photos/id/1019/200/300',\r\n-        album: 'Artificial Music',\r\n-        duration: 208,\r\n-    },\r\n-    {\r\n-        id: '5',\r\n-        url: 'https://www.chosic.com/wp-content/uploads/2021/05/inossi-got-you.mp3',\r\n-        title: 'Got You',\r\n-        artist: '',\r\n-        artwork: 'https://picsum.photos/id/103/200/300',\r\n-        album: 'INOSSI',\r\n-        duration: 178,\r\n-    },\r\n-    {\r\n-        id: '6',\r\n-        url: 'https://www.chosic.com/wp-content/uploads/2021/04/kvgarlic__largestreamoverloginforestmarch.mp3',\r\n-        title: 'Peaceful water stream',\r\n-        artist: '',\r\n-        artwork: 'https://picsum.photos/id/1038/200/300',\r\n-        album: 'Chosic',\r\n-        duration: 66,\r\n-    }]\r\n+\r\n+\r\n var index = 0\r\n const App2 = () => {\r\n-    const previousButton = () => {\r\n+    const rotate = useRef(new Animated.Value(0)).current\r\n+    const rotateImage = useRef(\r\n+        Animated.loop(\r\n+            Animated.timing(rotate, {\r\n+                toValue: 1,\r\n+                duration: 10000,\r\n+                useNativeDriver: true,\r\n+                isInteraction: false,\r\n+                easing: Easing.linear(0)\r\n+            }),\r\n+            { iterations: 10 }\r\n+        ).current\r\n+    )\r\n+    const progress = useProgress()\r\n+    const rotateStyle = rotate.interpolate({\r\n+        inputRange: [0, 1],\r\n+        outputRange: [\"0deg\", \"360deg\"]\r\n+    })\r\n+    const [isPlaying, setIsPlaying] = useState(false)\r\n+    const previousButton = async () => {\r\n \r\n     }\r\n-    const playButton = () => {\r\n+    const playButton = async () => {\r\n \r\n+        await TrackPlayer.add(tracks[index])\r\n+\r\n+        if (isPlaying == false) {\r\n+            await TrackPlayer.play()\r\n+            rotateImage.start()\r\n+        }\r\n+        else {\r\n+            await TrackPlayer.stop()\r\n+\r\n+        }\r\n+\r\n+        setIsPlaying(!isPlaying)\r\n+\r\n     }\r\n-    const stopButton = () => {\r\n+    const stopButton = async () => {\r\n+        await TrackPlayer.destroy()\r\n \r\n     }\r\n-    const nextButton = () => {\r\n+    const nextButton = async () => {\r\n \r\n     }\r\n \r\n     return (\r\n@@ -141,5 +122,6 @@\n             </View>\r\n         </View>\r\n     )\r\n }\r\n+\r\n export default App2\n\\ No newline at end of file\n"
                },
                {
                    "date": 1644681407362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useRef, useState } from 'react'\r\n-import { View, Slider, Image, Animated, TouchableOpacity } from 'react-native'\r\n+import { View, Slider, Image, Animated, TouchableOpacity,Easing } from 'react-native'\r\n import TrackPlayer, { useProgress } from 'react-native-track-player'\r\n-import Easing from 'react-native/Libraries/Animated/Easing'\r\n+\r\n import { images, tracks } from './src/utils'\r\n \r\n \r\n \r\n@@ -50,9 +50,9 @@\n         await TrackPlayer.destroy()\r\n \r\n     }\r\n     const nextButton = async () => {\r\n-\r\n+     \r\n     }\r\n \r\n     return (\r\n         <View style={{\r\n"
                },
                {
                    "date": 1644682280925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import React, { useRef, useState } from 'react'\r\n-import { View, Slider, Image, Animated, TouchableOpacity,Easing } from 'react-native'\r\n+import { View, Slider, Image, Animated, TouchableOpacity, Easing, StyleSheet } from 'react-native'\r\n import TrackPlayer, { useProgress } from 'react-native-track-player'\r\n-\r\n import { images, tracks } from './src/utils'\r\n \r\n \r\n \r\n@@ -15,9 +14,9 @@\n                 toValue: 1,\r\n                 duration: 10000,\r\n                 useNativeDriver: true,\r\n                 isInteraction: false,\r\n-                easing: Easing.linear(0)\r\n+                easing: Easing.linear()\r\n             }),\r\n             { iterations: 10 }\r\n         ).current\r\n     )\r\n@@ -50,78 +49,85 @@\n         await TrackPlayer.destroy()\r\n \r\n     }\r\n     const nextButton = async () => {\r\n-     \r\n+\r\n     }\r\n \r\n     return (\r\n-        <View style={{\r\n-            flex: 1,\r\n-            backgroundColor: \"yellow\",\r\n-            justifyContent: 'center',\r\n-            alignItems: 'center'\r\n-        }}>\r\n-\r\n+        <View style={styles.container}>\r\n             <Animated.Image\r\n                 source={images.background}\r\n                 resizeMode='cover'\r\n-                style={{\r\n-                    height: 200,\r\n-                    width: 200,\r\n-                    borderRadius: 100,\r\n-                    transform: [{ rotate: rotateStyle }]  //\r\n-                }}\r\n-            />\r\n+                style={\r\n+                    styles.imageBackground,\r\n+                    { transform: [{ rotate: rotateStyle }] }\r\n+                } />\r\n \r\n-            <View style={{ width: '100%', marginTop: 20 }}>\r\n-                <Slider maximumValue={149}\r\n+            <View style={styles.slider}>\r\n+                <Slider maximumValue={200}\r\n                     minimumValue={0}\r\n                     value={progress.position}\r\n                     thumbTintColor=\"red\" />\r\n             </View>\r\n-            <View style={{\r\n-                flexDirection: 'row',\r\n-                justifyContent: \"space-evenly\",\r\n-                marginTop: 30,\r\n-                alignItems: 'center',\r\n-                width: '100%'\r\n-            }}>\r\n+            <View style={styles.imageContainer}>\r\n                 <TouchableOpacity onPress={previousButton}>\r\n                     <Image\r\n-                        style={{ height: 40, width: 40 }}\r\n+                        style={styles.image}\r\n                         source={images.previous}\r\n                         resizeMode=\"cover\" />\r\n                 </TouchableOpacity>\r\n                 <TouchableOpacity\r\n-                    onPress={playButton}\r\n-                >\r\n+                    onPress={playButton}>\r\n                     <Image source={isPlaying ?\r\n                         images.pause :\r\n                         images.play}\r\n                         resizeMode=\"cover\"\r\n-                        style={{ height: 40, width: 40 }} />\r\n+                        style={styles.image} />\r\n                 </TouchableOpacity>\r\n                 <TouchableOpacity\r\n                     onPress={stopButton}>\r\n-\r\n                     <Image source={images.stop}\r\n                         resizeMode=\"cover\"\r\n-                        style={{\r\n-                            width: 40,\r\n-                            height: 40\r\n-                        }} />\r\n-\r\n+                        style={styles.image} />\r\n                 </TouchableOpacity>\r\n                 <TouchableOpacity\r\n                     onPress={nextButton}>\r\n                     <Image\r\n-                        style={{ width: 40, height: 40 }}\r\n+                        style={styles.image}\r\n                         source={images.next}\r\n                         resizeMode=\"cover\" />\r\n                 </TouchableOpacity>\r\n             </View>\r\n         </View>\r\n     )\r\n }\r\n+const styles = StyleSheet.create({\r\n+    image: {\r\n+        width: 40,\r\n+        height: 40\r\n+    },\r\n+    container: {\r\n+        flex: 1,\r\n+        backgroundColor: \"yellow\",\r\n+        justifyContent: 'center',\r\n+        alignItems: 'center'\r\n+    },\r\n+    imageBackground: {\r\n+        height: 200,\r\n+        width: 200,\r\n+        borderRadius: 100\r\n+    },\r\n+    imageContainer: {\r\n+        flexDirection: 'row',\r\n+        justifyContent: \"space-evenly\",\r\n+        marginTop: 30,\r\n+        alignItems: 'center',\r\n+        width: '100%'\r\n+    },\r\n+    slider: {\r\n+        width: '100%',\r\n+        marginTop: 20\r\n+    }\r\n \r\n+})\r\n export default App2\n\\ No newline at end of file\n"
                },
                {
                    "date": 1644682368892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n                 toValue: 1,\r\n                 duration: 10000,\r\n                 useNativeDriver: true,\r\n                 isInteraction: false,\r\n-                easing: Easing.linear()\r\n+                easing: Easing.linear\r\n             }),\r\n             { iterations: 10 }\r\n         ).current\r\n     )\r\n"
                },
                {
                    "date": 1644682459447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n             rotateImage.start()\r\n         }\r\n         else {\r\n             await TrackPlayer.stop()\r\n-\r\n+            rotateImage.stop()\r\n         }\r\n \r\n         setIsPlaying(!isPlaying)\r\n \r\n"
                },
                {
                    "date": 1644683079012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,13 @@\n         outputRange: [\"0deg\", \"360deg\"]\r\n     })\r\n     const [isPlaying, setIsPlaying] = useState(false)\r\n     const previousButton = async () => {\r\n+        index--\r\n+        var previous = index\r\n+        await TrackPlayer.destroy()\r\n+        await TrackPlayer.add(tracks[previous])\r\n+        rotateImage.setValue(0)\r\n \r\n     }\r\n     const playButton = async () => {\r\n \r\n@@ -46,12 +51,20 @@\n \r\n     }\r\n     const stopButton = async () => {\r\n         await TrackPlayer.destroy()\r\n+        rotateImage.setValue(0)\r\n \r\n     }\r\n     const nextButton = async () => {\r\n-\r\n+        index = index + 1\r\n+        var next = index\r\n+        rotateImage.setValue(0)\r\n+        await TrackPlayer.destroy()\r\n+        await TrackPlayer.add(tracks[next])\r\n+        await TrackPlayer.play()\r\n+        rotateImage.start()\r\n+        setIsPlaying(true)\r\n     }\r\n \r\n     return (\r\n         <View style={styles.container}>\r\n"
                },
                {
                    "date": 1644683325119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,15 +67,15 @@\n     }\r\n \r\n     return (\r\n         <View style={styles.container}>\r\n-            <Animated.Image\r\n+            {/* <Animated.Image\r\n                 source={images.background}\r\n                 resizeMode='cover'\r\n                 style={\r\n                     styles.imageBackground,\r\n                     { transform: [{ rotate: rotateStyle }] }\r\n-                } />\r\n+                } /> */}\r\n \r\n             <View style={styles.slider}>\r\n                 <Slider maximumValue={200}\r\n                     minimumValue={0}\r\n"
                },
                {
                    "date": 1644683380045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,15 +67,19 @@\n     }\r\n \r\n     return (\r\n         <View style={styles.container}>\r\n-            {/* <Animated.Image\r\n+            <Animated.Image\r\n                 source={images.background}\r\n                 resizeMode='cover'\r\n-                style={\r\n-                    styles.imageBackground,\r\n-                    { transform: [{ rotate: rotateStyle }] }\r\n-                } /> */}\r\n+                style={{\r\n+                    width: 200,\r\n+                    height: 200,\r\n+                    \r\n+                }\r\n+                    // styles.imageBackground,\r\n+                    // { transform: [{ rotate: rotateStyle }] }\r\n+                } />\r\n \r\n             <View style={styles.slider}>\r\n                 <Slider maximumValue={200}\r\n                     minimumValue={0}\r\n"
                },
                {
                    "date": 1644683405578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n                 resizeMode='cover'\r\n                 style={{\r\n                     width: 200,\r\n                     height: 200,\r\n-                    \r\n+                    borderRadius: 100\r\n                 }\r\n                     // styles.imageBackground,\r\n                     // { transform: [{ rotate: rotateStyle }] }\r\n                 } />\r\n"
                },
                {
                    "date": 1644683468173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,13 +73,14 @@\n                 resizeMode='cover'\r\n                 style={{\r\n                     width: 200,\r\n                     height: 200,\r\n-                    borderRadius: 100\r\n-                }\r\n+                    borderRadius: 100,\r\n+                     transform: [{ rotate: rotateStyle }]\r\n+                \r\n                     // styles.imageBackground,\r\n                     // { transform: [{ rotate: rotateStyle }] }\r\n-                } />\r\n+                }} />\r\n \r\n             <View style={styles.slider}>\r\n                 <Slider maximumValue={200}\r\n                     minimumValue={0}\r\n"
                },
                {
                    "date": 1644683525525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n         rotateImage.setValue(0)\r\n \r\n     }\r\n     const nextButton = async () => {\r\n-        index = index + 1\r\n+        index++\r\n         var next = index\r\n         rotateImage.setValue(0)\r\n         await TrackPlayer.destroy()\r\n         await TrackPlayer.add(tracks[next])\r\n@@ -74,10 +74,10 @@\n                 style={{\r\n                     width: 200,\r\n                     height: 200,\r\n                     borderRadius: 100,\r\n-                     transform: [{ rotate: rotateStyle }]\r\n-                \r\n+                    transform: [{ rotate: rotateStyle }]\r\n+\r\n                     // styles.imageBackground,\r\n                     // { transform: [{ rotate: rotateStyle }] }\r\n                 }} />\r\n \r\n"
                },
                {
                    "date": 1644683632941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     const playButton = async () => {\r\n \r\n         await TrackPlayer.add(tracks[index])\r\n \r\n-        if (isPlaying == false) {\r\n+        if (isPlaying === false) {\r\n             await TrackPlayer.play()\r\n             rotateImage.start()\r\n         }\r\n         else {\r\n"
                },
                {
                    "date": 1644683839895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,10 @@\n     const rotateStyle = rotate.interpolate({\r\n         inputRange: [0, 1],\r\n         outputRange: [\"0deg\", \"360deg\"]\r\n     })\r\n-    const [isPlaying, setIsPlaying] = useState(false)\r\n+    const [isPlaying, setIsPlaying] = useState(true)\r\n+    const[value, setValue]=useState(0)\r\n     const previousButton = async () => {\r\n         index--\r\n         var previous = index\r\n         await TrackPlayer.destroy()\r\n@@ -45,9 +46,8 @@\n         else {\r\n             await TrackPlayer.stop()\r\n             rotateImage.stop()\r\n         }\r\n-\r\n         setIsPlaying(!isPlaying)\r\n \r\n     }\r\n     const stopButton = async () => {\r\n@@ -84,9 +84,12 @@\n             <View style={styles.slider}>\r\n                 <Slider maximumValue={200}\r\n                     minimumValue={0}\r\n                     value={progress.position}\r\n-                    thumbTintColor=\"red\" />\r\n+                    thumbTintColor=\"red\" \r\n+                    onSlidingComplete={(value)=>{\r\n+                    setValue(value)\r\n+                    }}/>\r\n             </View>\r\n             <View style={styles.imageContainer}>\r\n                 <TouchableOpacity onPress={previousButton}>\r\n                     <Image\r\n"
                },
                {
                    "date": 1644683876661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     const rotateStyle = rotate.interpolate({\r\n         inputRange: [0, 1],\r\n         outputRange: [\"0deg\", \"360deg\"]\r\n     })\r\n-    const [isPlaying, setIsPlaying] = useState(true)\r\n+    const [isPlaying, setIsPlaying] = useState(false)\r\n     const[value, setValue]=useState(0)\r\n     const previousButton = async () => {\r\n         index--\r\n         var previous = index\r\n"
                },
                {
                    "date": 1644683954008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,10 @@\n                 isInteraction: false,\r\n                 easing: Easing.linear\r\n             }),\r\n             { iterations: 10 }\r\n-        ).current\r\n-    )\r\n+        )\r\n+    ).current\r\n     const progress = useProgress()\r\n     const rotateStyle = rotate.interpolate({\r\n         inputRange: [0, 1],\r\n         outputRange: [\"0deg\", \"360deg\"]\r\n"
                },
                {
                    "date": 1644683996513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n             await TrackPlayer.play()\r\n             rotateImage.start()\r\n         }\r\n         else {\r\n-            await TrackPlayer.stop()\r\n+            await TrackPlayer.pause()\r\n             rotateImage.stop()\r\n         }\r\n         setIsPlaying(!isPlaying)\r\n \r\n"
                },
                {
                    "date": 1644684100159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const rotateImage = useRef(\r\n         Animated.loop(\r\n             Animated.timing(rotate, {\r\n                 toValue: 1,\r\n-                duration: 10000,\r\n+                duration: 5000,\r\n                 useNativeDriver: true,\r\n                 isInteraction: false,\r\n                 easing: Easing.linear\r\n             }),\r\n"
                },
                {
                    "date": 1644684246810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,10 +85,11 @@\n                 <Slider maximumValue={200}\r\n                     minimumValue={0}\r\n                     value={progress.position}\r\n                     thumbTintColor=\"red\" \r\n-                    onSlidingComplete={(value)=>{\r\n-                    setValue(value)\r\n+                    onSlidingComplete={async(value)=>{\r\n+                        setValue(value)\r\n+                        await TrackPlayer.seekTo(value)\r\n                     }}/>\r\n             </View>\r\n             <View style={styles.imageContainer}>\r\n                 <TouchableOpacity onPress={previousButton}>\r\n"
                },
                {
                    "date": 1644684444186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n         index--\r\n         var previous = index\r\n         await TrackPlayer.destroy()\r\n         await TrackPlayer.add(tracks[previous])\r\n-        rotateImage.setValue(0)\r\n+        rotate.setValue(0)\r\n \r\n     }\r\n     const playButton = async () => {\r\n \r\n@@ -51,15 +51,15 @@\n \r\n     }\r\n     const stopButton = async () => {\r\n         await TrackPlayer.destroy()\r\n-        rotateImage.setValue(0)\r\n+        rotate.setValue(0)\r\n \r\n     }\r\n     const nextButton = async () => {\r\n         index++\r\n         var next = index\r\n-        rotateImage.setValue(0)\r\n+        rotate.setValue(0)\r\n         await TrackPlayer.destroy()\r\n         await TrackPlayer.add(tracks[next])\r\n         await TrackPlayer.play()\r\n         rotateImage.start()\r\n@@ -81,13 +81,13 @@\n                     // { transform: [{ rotate: rotateStyle }] }\r\n                 }} />\r\n \r\n             <View style={styles.slider}>\r\n-                <Slider maximumValue={200}\r\n+                <Slider maximumValue={progress.duration}\r\n                     minimumValue={0}\r\n                     value={progress.position}\r\n                     thumbTintColor=\"red\" \r\n-                    onSlidingComplete={async(value)=>{\r\n+                    onSlidingComplete={async()=>{\r\n                         setValue(value)\r\n                         await TrackPlayer.seekTo(value)\r\n                     }}/>\r\n             </View>\r\n"
                },
                {
                    "date": 1644684475125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,10 @@\n                     // { transform: [{ rotate: rotateStyle }] }\r\n                 }} />\r\n \r\n             <View style={styles.slider}>\r\n-                <Slider maximumValue={progress.duration}\r\n+                <Slider \r\n+                    maximumValue={progress.duration}\r\n                     minimumValue={0}\r\n                     value={progress.position}\r\n                     thumbTintColor=\"red\" \r\n                     onSlidingComplete={async()=>{\r\n"
                },
                {
                    "date": 1644684631471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,11 @@\n         var previous = index\r\n         await TrackPlayer.destroy()\r\n         await TrackPlayer.add(tracks[previous])\r\n         rotate.setValue(0)\r\n+        await TrackPlayer.play()\r\n+        rotateImage.start()\r\n+        setIsPlaying(true)\r\n \r\n     }\r\n     const playButton = async () => {\r\n \r\n"
                },
                {
                    "date": 1644684642980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,9 @@\n     }\r\n     const stopButton = async () => {\r\n         await TrackPlayer.destroy()\r\n         rotate.setValue(0)\r\n+        setIsPlaying(false)\r\n \r\n     }\r\n     const nextButton = async () => {\r\n         index++\r\n"
                },
                {
                    "date": 1644684671907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n         setIsPlaying(!isPlaying)\r\n \r\n     }\r\n     const stopButton = async () => {\r\n-        await TrackPlayer.destroy()\r\n+        await TrackPlayer.stop()\r\n         rotate.setValue(0)\r\n         setIsPlaying(false)\r\n \r\n     }\r\n"
                },
                {
                    "date": 1644684957671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,17 +74,15 @@\n         <View style={styles.container}>\r\n             <Animated.Image\r\n                 source={images.background}\r\n                 resizeMode='cover'\r\n-                style={{\r\n-                    width: 200,\r\n-                    height: 200,\r\n-                    borderRadius: 100,\r\n-                    transform: [{ rotate: rotateStyle }]\r\n+                style={[styles.image, {transform: [{ rotate: rotateStyle }]}]\r\n+                    \r\n+                    \r\n \r\n                     // styles.imageBackground,\r\n                     // { transform: [{ rotate: rotateStyle }] }\r\n-                }} />\r\n+                } />\r\n \r\n             <View style={styles.slider}>\r\n                 <Slider \r\n                     maximumValue={progress.duration}\r\n"
                },
                {
                    "date": 1644684974620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         <View style={styles.container}>\r\n             <Animated.Image\r\n                 source={images.background}\r\n                 resizeMode='cover'\r\n-                style={[styles.image, {transform: [{ rotate: rotateStyle }]}]\r\n+                style={[styles.imageBackground, {transform: [{ rotate: rotateStyle }]}]\r\n                     \r\n                     \r\n \r\n                     // styles.imageBackground,\r\n"
                }
            ],
            "date": 1644598909005,
            "name": "Commit-0",
            "content": "const App2=()=>{\r\n    return (\r\n        <View style={{\r\n          flex: 1,\r\n          backgroundColor: \"yellow\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n    \r\n          <Animated.Image\r\n            source={images.background}\r\n            resizeMode='cover'\r\n            style={{\r\n              height: 200,\r\n              width: 200,\r\n              borderRadius: 100,\r\n              transform: [{ rotate: rotateStyle }]  //\r\n            }}\r\n          />\r\n    \r\n          <View style={{ width: '100%', marginTop: 20 }}>\r\n            <Slider maximumValue={149}\r\n              minimumValue={0}\r\n              value={progress.position}\r\n              thumbTintColor=\"red\" />\r\n          </View>\r\n          <View style={{\r\n            flexDirection: 'row',\r\n            justifyContent: \"space-evenly\",\r\n            marginTop: 30,\r\n            alignItems: 'center',\r\n            width: '100%'\r\n          }}>\r\n            <TouchableOpacity onPress={previous}>\r\n              <Image\r\n                style={{ height: 40, width: 40 }}\r\n                source={require('./src/image/previousIcon.png')}\r\n                resizeMode=\"cover\" />\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={play}\r\n            >\r\n              <Image source={isPlaying ?\r\n                require('./src/image/pauseIcon.png') :\r\n                require('./src/image/playIcon.jpg')}\r\n                resizeMode=\"cover\"\r\n                style={{ height: 40, width: 40 }} />\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={stopButton}>\r\n    \r\n              <Image source={require('./src/image/stopIcon.png')}\r\n                resizeMode=\"cover\"\r\n                style={{\r\n                  width: 40,\r\n                  height: 40\r\n                }} />\r\n    \r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={next}>\r\n              <Image\r\n                style={{ width: 40, height: 40 }}\r\n                source={require('./src/image/nextIcon.png')} />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      )\r\n    }\r\nexport default App2"
        }
    ]
}